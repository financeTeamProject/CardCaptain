<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="search">
	<select id="searchKeyword" parameterType="hashmap" resultType="hashmap">
		SELECT C.CARD_NO,C.CARD_NAME,C.CARD_TYPE,B.BENEFIT_TOP,B.BENEFIT_TYPE_NO,C.CARD_IMG_URL,C.CARD_SUMMARY
		FROM CARDS C INNER JOIN CARDTYPES T 
							 ON C.CARD_NO = T.CARD_NO
					 INNER JOIN CARDBENEFITS B
							 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
		WHERE B.DETAIL_INFO LIKE '%'|| #{option} || '%'
		ORDER BY C.CARD_NO
	</select>
	
	<select id="cardNoDistinct" parameterType="hashmap" resultType="hashmap">
		SELECT DISTINCT(C.CARD_NO), C.CARD_IMG_URL, C.CARD_NAME
		FROM CARDS C INNER JOIN CARDTYPES T 
							 ON C.CARD_NO = T.CARD_NO
					 INNER JOIN CARDBENEFITS B
							 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
		WHERE B.DETAIL_INFO LIKE '%'|| #{option} || '%'
		ORDER BY C.CARD_NO
	</select>
	
	<select id="paging" parameterType="hashmap" resultType="hashmap">
		SELECT A.CARD_NO,A.CARD_NAME,A.CARD_TYPE,A.BENEFIT_TOP,A.BENEFIT_TYPE_NO,A.CARD_IMG_URL,A.CARD_SUMMARY 
		FROM (SELECT C.CARD_NO,C.CARD_NAME,C.CARD_TYPE,B.BENEFIT_TOP,B.BENEFIT_TYPE_NO,C.CARD_IMG_URL,C.CARD_SUMMARY, ROW_NUMBER() OVER(ORDER BY C.CARD_NO) AS RNUM
				FROM CARDS C INNER JOIN CARDTYPES T 
									 ON C.CARD_NO = T.CARD_NO
							 INNER JOIN CARDBENEFITS B
									 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
				WHERE B.DETAIL_INFO LIKE '%'|| #{option} || '%'
				ORDER BY C.CARD_NO) A
	</select>
	
	<select id="pagingDistinct" parameterType="hashmap" resultType="hashmap">
		SELECT B.CARD_NO, B.CARD_NAME, B.CARD_IMG_URL,B.RNUM
		FROM (SELECT A.CARD_NO, A.CARD_NAME, A.CARD_IMG_URL, ROW_NUMBER() OVER(ORDER BY A.CARD_NO) AS RNUM 
				FROM (SELECT DISTINCT C.CARD_NO, C.CARD_NAME, C.CARD_IMG_URL
						FROM CARDS C INNER JOIN CARDTYPES T 
											 ON C.CARD_NO = T.CARD_NO
									 INNER JOIN CARDBENEFITS B
											 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
						WHERE B.DETAIL_INFO LIKE '%'|| #{option} || '%'
        		ORDER BY C.CARD_NO) A
		) B
		WHERE B.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="checkKeyword" parameterType="String" resultType="hashmap">
		SELECT C.CARD_NO,C.CARD_NAME,C.CARD_TYPE,B.BENEFIT_TOP,B.BENEFIT_TYPE_NO,C.CARD_IMG_URL,C.CARD_SUMMARY
		FROM CARDS C INNER JOIN CARDTYPES T 
							 ON C.CARD_NO = T.CARD_NO
					 INNER JOIN CARDBENEFITS B
							 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
		WHERE B.BENEFIT_TOP IN (${value})
		ORDER BY C.CARD_NO
	</select>
	
	<select id="checkcardNoDistinct" parameterType="String" resultType="hashmap">
		SELECT DISTINCT(C.CARD_NO), C.CARD_IMG_URL, C.CARD_NAME
		FROM CARDS C INNER JOIN CARDTYPES T 
							 ON C.CARD_NO = T.CARD_NO
					 INNER JOIN CARDBENEFITS B
							 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
		WHERE B.BENEFIT_TOP IN (${value})
		ORDER BY C.CARD_NO
	</select>
	<!-- params.put으로 넣어도 안에 값이 String이면 '$'를 써야 함 -->
	<select id="checkpagingDistinct" parameterType="hashmap" resultType="hashmap">
		SELECT B.CARD_NO, B.CARD_NAME, B.CARD_IMG_URL,B.RNUM
		FROM (SELECT A.CARD_NO, A.CARD_NAME, A.CARD_IMG_URL, ROW_NUMBER() OVER(ORDER BY A.CARD_NO) AS RNUM 
				FROM (SELECT DISTINCT C.CARD_NO, C.CARD_NAME, C.CARD_IMG_URL
						FROM CARDS C INNER JOIN CARDTYPES T 
											 ON C.CARD_NO = T.CARD_NO
									 INNER JOIN CARDBENEFITS B
											 ON T.CARD_NO = B.CARD_NO AND C.DEL_CHECK = 1
						WHERE B.BENEFIT_TOP IN (${data})
        		ORDER BY C.CARD_NO) A
		) B
		WHERE B.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="randomCard" parameterType="hashmap" resultType="hashmap">
		SELECT A.CARD_NO, A.CARD_SUMMARY, A.CARD_NAME, A.SHOP_INFO
		FROM(SELECT DISTINCT B.CARD_NO, C.CARD_SUMMARY, C.CARD_NAME, B.SHOP_INFO
					FROM CARDS C INNER JOIN CARDBENEFITS B
                                 ON C.CARD_NO = B.CARD_NO AND B.SHOP_INFO IS NOT NULL AND C.CARD_SUMMARY IS NOT NULL AND C.DEL_CHECK = 1
			 ORDER BY DBMS_RANDOM.VALUE) A
		WHERE ROWNUM = 1
	</select>
	
	<select id="checklistKeyword" parameterType="ArrayList" resultType="hashmap">
		SELECT CARD_NO, CARD_NAME, CARD_KIND, CARD_TYPE, BENEFIT_TOP, CARD_IMG_URL
		FROM(SELECT C.CARD_NO,C.CARD_NAME,DECODE(C.CARD_TYPE, 0, '신용카드','체크카드') AS CARD_KIND,
					CASE WHEN T.CARD_TYPE = 0 THEN '할인'
						 WHEN T.CARD_TYPE = 1 THEN '적립'
						 ELSE '마일리지'
					END AS CARD_TYPE, B.BENEFIT_TOP,C.CARD_IMG_URL
				FROM CARDS C INNER JOIN CARDBENEFITS B ON C.CARD_NO = B.CARD_NO
							 INNER JOIN CARDTYPES T ON B.CARD_NO = T.CARD_NO
							  AND C.DEL_CHECK=1) A
		 <if test="kind == '' and type == '' and benefit == ''">
		 	WHERE 1 = 1
		 </if>
		 <if test="kind != '' or type != '' or benefit != ''">
		 	WHERE 1!= 1
		 </if>
		<if test="kind != ''">
			OR CARD_KIND IN (${kind})
		</if>
		<if test="type != ''">
			OR CARD_KIND IN (${type})
		</if>
		<if test="benefit != ''">
			OR CARD_KIND IN (${benefit})
		</if>
		ORDER BY CARD_NO
	</select>
	
	<select id="cardListGet" parameterType="ArrayList" resultType="hashmap">
		SELECT C.CARD_NO,C.CARD_NAME,C.CARD_SUMMARY, DECODE(C.CARD_TYPE, 0, '신용카드','체크카드') AS CARD_KIND, DECODE(T.CARD_TYPE,0,'할인',1,'적립',2,'마일리지') AS CARD_TYPE,C.CARD_IMG_URL
		FROM CARDS C INNER JOIN CARDTYPES T
                    		 ON C.CARD_NO = T.CARD_NO
                    		 AND C.DEL_CHECK=1
	</select>
	
	<select id="checkDistinct" parameterType="hashmap" resultType="hashmap">
		SELECT DISTINCT CARD_NO, CARD_NAME
		FROM(SELECT C.CARD_NO,C.CARD_NAME,DECODE(C.CARD_TYPE, 0, '신용카드','체크카드') AS CARD_KIND,
					CASE WHEN T.CARD_TYPE = 0 THEN '할인'
						 WHEN T.CARD_TYPE = 1 THEN '적립'
						 ELSE '마일리지'
					END AS CARD_TYPE, B.BENEFIT_TOP,C.CARD_IMG_URL
				FROM CARDS C INNER JOIN CARDBENEFITS B ON C.CARD_NO = B.CARD_NO
							 INNER JOIN CARDTYPES T ON B.CARD_NO = T.CARD_NO
							 AND C.DEL_CHECK=1) A
		 <if test="kind == '' and type == '' and benefit == ''">
		 	WHERE 1 = 1
		 </if>
		 <if test="kind != '' or type != '' or benefit != ''">
		 	WHERE 1!= 1
		 </if>
		<if test="kind != ''">
			OR CARD_KIND IN (${kind})
		</if>
		<if test="type != ''">
			OR CARD_KIND IN (${type})
		</if>
		<if test="benefit != ''">
			OR CARD_KIND IN (${benefit})
		</if>
		ORDER BY CARD_NO
	</select>
	
	<select id="listpagingDistinct" parameterType="hashmap" resultType="hashmap">
		SELECT C.CARD_NO,C.CARD_NAME,C.CARD_IMG_URL,C.RNUM
		  FROM(SELECT B.CARD_NO,B.CARD_NAME,B.CARD_KIND,B.CARD_TYPE,B.CARD_IMG_URL, ROW_NUMBER() OVER(ORDER BY B.CARD_NO) AS RNUM
				 FROM(SELECT DISTINCT CARD_NO,CARD_NAME,CARD_KIND,CARD_TYPE,CARD_IMG_URL
						FROM(SELECT C.CARD_NO, C.CARD_NAME, DECODE(C.CARD_TYPE,0,'신용카드','체크카드') AS CARD_KIND, C.CARD_IMG_URL, DECODE(T.CARD_TYPE,0,'할인',1,'적립',2,'마일리지') AS CARD_TYPE,B.BENEFIT_TOP
							   FROM CARDS C INNER JOIN CARDBENEFITS B ON C.CARD_NO = B.CARD_NO INNER JOIN CARDTYPES T ON B.CARD_NO = T.CARD_NO AND C.DEL_CHECK=1) A
                     <if test="kind == '' and type == '' and benefit == ''">
					 	WHERE 1 = 1
					 </if>
					 <if test="kind != '' or type != '' or benefit != ''">
					 	WHERE 1!= 1
					 </if>
					<if test="kind != ''">
						OR CARD_KIND IN (${kind})
					</if>
					<if test="type != ''">
						OR CARD_KIND IN (${type})
					</if>
					<if test="benefit != ''">
						OR CARD_KIND IN (${benefit})
					</if>
        		)B
			) C
			WHERE C.RNUM BETWEEN #{startCnt} AND #{endCnt}
	</select>
	
	<select id="compareList" parameterType="String" resultType="hashmap">
		SELECT C.CARD_NO,C.CARD_NAME,C.CARD_SUMMARY, DECODE(C.CARD_TYPE, 0, '신용카드','체크카드') AS CARD_KIND, DECODE(T.CARD_TYPE,0,'할인',1,'적립',2,'마일리지') AS CARD_TYPE,C.CARD_IMG_URL
		FROM CARDS C INNER JOIN CARDTYPES T
                    		 ON C.CARD_NO = T.CARD_NO
                    		 AND C.DEL_CHECK=1
		WHERE C.CARD_NO IN (${value})
	</select>
	
	<update id="cardDelete" parameterType="hashmap">
		UPDATE CARDS SET DEL_CHECK = 2
		WHERE CARD_NO = #{delNo}
	</update>
	
	<update id="cardBenefitDelete" parameterType="hashmap">
		UPDATE CARDBENEFITS SET DEL_CHECK = 2
		WHERE CARD_NO = #{delNo}
	</update>
	
	<select id="cardUpdatePop" parameterType="hashmap" resultType="hashmap">
		SELECT C.CARD_NO,C.CARD_CMP_NO,C.CARD_NAME,C.CARD_APPLY_URL,C.CARD_IMG_URL,C.CARD_SUMMARY,C.CARD_TYPE AS C_TYPE,T.CARD_TYPE AS T_TYPE,T.CARD_TYPE_NO,B.BENEFIT_NO,B.BENEFIT_TOP,B.BENEFIT_MID,B.DETAIL_INFO,B.SHOP_INFO
		FROM CARDS C INNER JOIN CARDTYPES T
	                    	 ON C.CARD_NO = T.CARD_NO AND C.DEL_CHECK=1
					 INNER JOIN CARDBENEFITS B
	                    	 ON T.CARD_NO = B.CARD_NO
		WHERE C.CARD_NO = #{cardUpNo}
	</select>
	
	<update id="cardDBUpdate" parameterType="hashmap">
		UPDATE CARDS SET 
					 CARD_NAME=#{cardName},
					 CARD_APPLY_URL=#{cardApplyUrl},
					 CARD_IMG_URL = #{cardImg},
					 CARD_SUMMARY = #{cardSummary},
					 CARD_TYPE = #{cardKind}
					 WHERE CARD_NO=#{cardNo}
	</update>
	<update id="cardTypeDBUpdate" parameterType="hashmap">
		UPDATE CARDTYPES SET 
					 CARD_TYPE=#{cardType}
					 WHERE CARD_NO=#{cardNo}
	</update>
</mapper>