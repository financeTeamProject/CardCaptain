<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="R">
	<!-- 신용카드 TOP 10 -->
	<select id="getRCredit" parameterType="hashmap" resultType="hashmap">
		SELECT C.CARD_NO, C.CARD_CMP_NO, C.CARD_CMP_NAME, C.CARD_NAME, C.CARD_SUMMARY, 
            C.CARD_IMG_URL, C.CLICK_CNT, C.RNK
		FROM(SELECT C.*, CMP.CARD_CMP_NAME,
		           ROW_NUMBER() OVER(ORDER BY CLICK_CNT DESC) AS RNK 
		     FROM CARDS C INNER JOIN CARDCOMPANYS CMP
		                          ON  C.CARD_CMP_NO = CMP.CARD_CMP_NO
		                          AND CARD_TYPE = 0) C 
		WHERE C.RNK BETWEEN 1 AND 10
	</select>

	<!-- 신용카드 TOP 10 -->
	<select id="getRCheck" parameterType="hashmap" resultType="hashmap">
		SELECT C.CARD_NO, C.CARD_CMP_NO, C.CARD_CMP_NAME, C.CARD_NAME, C.CARD_SUMMARY, 
            C.CARD_IMG_URL, C.CLICK_CNT, C.RNK
		FROM(SELECT C.*, CMP.CARD_CMP_NAME,
		           ROW_NUMBER() OVER(ORDER BY CLICK_CNT DESC) AS RNK 
		     FROM CARDS C INNER JOIN CARDCOMPANYS CMP
		                          ON  C.CARD_CMP_NO = CMP.CARD_CMP_NO
		                          AND CARD_TYPE = 1) C 
		WHERE C.RNK BETWEEN 1 AND 10
	</select>
	
	<!-- 카드상세보기  -->
	<select id="getCView" parameterType="hashmap" resultType="hashmap">
		SELECT C.CARD_NO, C.CARD_NAME, C.CARD_IMG_URL, C.CLICK_CNT, CBF.BENEFIT_TOP, CBF.BENEFIT_MID, CBF.DETAIL_INFO,
            CMP.CARD_CMP_NAME, C.CARD_APPLY_URL, CBF.BENEFIT_IMG_URL
		FROM CARDS C INNER JOIN CARDBENEFITS CBF
		                    ON  C.CARD_NO = CBF.CARD_NO
		             INNER JOIN CARDCOMPANYS CMP
		                    ON  C.CARD_CMP_NO = CMP.CARD_CMP_NO
		WHERE C.CARD_NO = #{cardNo}
	</select>
	
	<!-- 카드사별 Top 1  -->
	<select id="cmpTop1" parameterType="hashmap" resultType="hashmap">
		SELECT CC.CARD_CMP_NO, CC.CARD_CMP_NAME, CC.CARD_NO, CC.CARD_NAME, CC.CARD_SUMMARY, CBF.BENEFIT_TOP, CC.CARD_IMG_URL,
            CC.CLICK_CNT, CC.RNK
		FROM(SELECT CMP.CARD_CMP_NO, CMP.CARD_CMP_NAME, C.CARD_NO, C.CARD_NAME, C.CARD_SUMMARY, C.CARD_IMG_URL,
		            C.CLICK_CNT, ROW_NUMBER() OVER(ORDER BY C.CLICK_CNT DESC) AS RNK
		     FROM CARDS C INNER JOIN CARDCOMPANYS CMP
		                     ON C.CARD_CMP_NO = CMP.CARD_CMP_NO
		     WHERE C.CARD_CMP_NO = #{cmpNo}) CC INNER JOIN CARDBENEFITS CBF
                                           ON CC.CARD_NO = CBF.CARD_NO
                                           AND RNK = 1
	</select>
	<!-- 카드사별 Top 2  -->
	<select id="cmpTop2" parameterType="hashmap" resultType="hashmap">
		SELECT CC.CARD_CMP_NO, CC.CARD_CMP_NAME, CC.CARD_NO, CC.CARD_NAME, CC.CARD_SUMMARY, CBF.BENEFIT_TOP, CC.CARD_IMG_URL,
            CC.CLICK_CNT, CC.RNK
		FROM(SELECT CMP.CARD_CMP_NO, CMP.CARD_CMP_NAME, C.CARD_NO, C.CARD_NAME, C.CARD_SUMMARY, C.CARD_IMG_URL,
		            C.CLICK_CNT, ROW_NUMBER() OVER(ORDER BY C.CLICK_CNT DESC) AS RNK
		     FROM CARDS C INNER JOIN CARDCOMPANYS CMP
		                     ON C.CARD_CMP_NO = CMP.CARD_CMP_NO
		     WHERE C.CARD_CMP_NO = #{cmpNo}) CC INNER JOIN CARDBENEFITS CBF
                                           ON CC.CARD_NO = CBF.CARD_NO
                                           AND RNK = 2
	</select>
	<!-- 카드사별 Top 3  -->
	<select id="cmpTop3" parameterType="hashmap" resultType="hashmap">
		SELECT CC.CARD_CMP_NO, CC.CARD_CMP_NAME, CC.CARD_NO, CC.CARD_NAME, CC.CARD_SUMMARY, CBF.BENEFIT_TOP, CC.CARD_IMG_URL,
            CC.CLICK_CNT, CC.RNK
		FROM(SELECT CMP.CARD_CMP_NO, CMP.CARD_CMP_NAME, C.CARD_NO, C.CARD_NAME, C.CARD_SUMMARY, C.CARD_IMG_URL,
		            C.CLICK_CNT, ROW_NUMBER() OVER(ORDER BY C.CLICK_CNT DESC) AS RNK
		     FROM CARDS C INNER JOIN CARDCOMPANYS CMP
		                     ON C.CARD_CMP_NO = CMP.CARD_CMP_NO
		     WHERE C.CARD_CMP_NO = #{cmpNo}) CC INNER JOIN CARDBENEFITS CBF
                                           ON CC.CARD_NO = CBF.CARD_NO
                                           AND RNK = 3
	</select>
	<!-- 조회수 업데이트  -->
	<update id="updateCnt" parameterType="hashmap">
		UPDATE CARDS SET CLICK_CNT = (SELECT NVL(CLICK_CNT,0) + 1
		                              FROM CARDS
		                              WHERE CARD_NO = #{cardClick})
		WHERE CARD_NO = #{cardClick}
	</update>
	<!-- 페이지 수  -->
	<select id="getReviewCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM HAVECARDREVIEWS
		WHERE CARD_NO = #{cardNo}
		AND DEL_CHECK = 1
	</select>
	<!-- 카드별 리뷰 목록  -->
	<select id="reviewList" parameterType="hashmap" resultType="hashmap">
		SELECT CC.REVIEW_NO, CC.MEMBER_NO, CC.NICKNAME, CC.CARD_NO, CC.CARD_NAME, CC.TITLE, CC.TEXT, CC.SCORE, CC.ADD_DATE
		FROM(SELECT C.REVIEW_NO, C.MEMBER_NO, C.NICKNAME, C.CARD_NO, C.CARD_NAME, C.TITLE, C.TEXT, C.SCORE,
				             C.ADD_DATE, ROW_NUMBER() OVER(ORDER BY C.REVIEW_NO DESC) AS RNK
		     FROM(SELECT DISTINCT HCR.REVIEW_NO, HCR.MEMBER_NO, MI.NICKNAME, HCR.CARD_NO, C.CARD_NAME, HCR.TITLE, HCR.TEXT, HCR.SCORE,
				                 TO_CHAR(HCR.ADD_DATE, 'YYYY-MM-DD') AS ADD_DATE
		          FROM HAVECARDREVIEWS HCR INNER JOIN HAVECARDS HC
		                                           ON HCR.CARD_NO = HC.CARD_NO
		                                   INNER JOIN CARDS C
		                                           ON HC.CARD_NO = C.CARD_NO
		                                   INNER JOIN MEMBER_INFO MI
		                                           ON HCR.MEMBER_NO = MI.MEMBER_NO
		         WHERE HCR.CARD_NO = #{cardNo}
		         AND HCR.DEL_CHECK = 1) C) CC
		WHERE CC.RNK BETWEEN #{startCnt} AND #{endCnt}
	</select>
	<select id="getReGood" parameterType="hashmap" resultType="Integer">
		SELECT LIKE_CNT
		FROM REVIEWGOOD
		WHERE REVIEW_NO = 8
	</select>
	<!-- 리뷰 작성  -->
	<insert id="addReview" parameterType="hashmap">
		INSERT INTO HAVECARDREVIEWS(REVIEW_NO, MEMBER_NO, CARD_NO, SCORE, TITLE, TEXT )
		VALUES(HAVECARDREVIEWS_SEQ.NEXTVAL, '72', '1005', '5','이 카드는 꿀', '혜택을 사용할수 있는 매장들이 너무 많다')
	</insert>
</mapper>